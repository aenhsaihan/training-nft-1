{ parameter
    (or (or (pair %balance_of
               (list %requests (pair (address %owner) (nat %token_id)))
               (contract %callback
                  (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
            (pair %mint (pair (pair nat bytes) bytes bytes) bytes))
        (or (list %transfer
               (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount)))))
            (list %update_operators
               (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                   (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))))) ;
  storage
    (pair (pair (pair (set %administrators address) (big_map %ledger nat address))
                (big_map %metadata string bytes)
                (big_map %operators (pair address address) (set nat)))
          (set %token_ids nat)
          (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) ;
  code { LAMBDA
           address
           unit
           { PUSH string "The sender can only manage operators for his own token" ;
             SENDER ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; UNIT } { FAILWITH } } ;
         LAMBDA
           (pair (big_map nat address) nat address)
           bool
           { UNPAIR 3 ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
             COMPARE ;
             EQ } ;
         LAMBDA
           (pair (pair (pair (pair (big_map nat address) (big_map string bytes))
                             (big_map (pair address address) (set nat))
                             (set nat))
                       (big_map nat (pair nat (map string bytes))))
                 nat)
           unit
           { UNPAIR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { DROP } ;
             UNIT } ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { DIG 4 ;
             DROP ;
             IF_LEFT
               { DUP 2 ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 UNPAIR ;
                 MAP { DUP ;
                       UNPAIR ;
                       DUP 2 ;
                       DUP 6 ;
                       PAIR ;
                       DUP 8 ;
                       SWAP ;
                       EXEC ;
                       DROP ;
                       PUSH nat 0 ;
                       SWAP ;
                       DIG 2 ;
                       DUP 6 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       PAIR 3 ;
                       DUP 8 ;
                       SWAP ;
                       EXEC ;
                       IF { DROP ; PUSH nat 1 } {} ;
                       SWAP ;
                       PAIR } ;
                 DIG 4 ;
                 DIG 5 ;
                 DROP 2 ;
                 SWAP ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR ;
                 DUP 2 ;
                 DIG 2 ;
                 CAR ;
                 DUP ;
                 CAR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 UPDATE 1 ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 DUP ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 DUP ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 SWAP ;
                 CAR ;
                 PAIR }
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 UNPAIR ;
                 UNPAIR ;
                 UNPAIR ;
                 DIG 2 ;
                 UNPAIR ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 NOT ;
                 IF { DROP 6 ; PUSH string "1" ; FAILWITH }
                    { DUP 6 ;
                      DUP 7 ;
                      CAR ;
                      DUP ;
                      CAR ;
                      DUP 9 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      SENDER ;
                      DUP 8 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      UPDATE 2 ;
                      UPDATE 1 ;
                      UPDATE 1 ;
                      DUP ;
                      CDR ;
                      DUP 8 ;
                      CDR ;
                      CDR ;
                      EMPTY_MAP string bytes ;
                      PUSH bytes 0x30 ;
                      SOME ;
                      PUSH string "decimals" ;
                      UPDATE ;
                      DIG 5 ;
                      SOME ;
                      PUSH string "symbol" ;
                      UPDATE ;
                      DIG 7 ;
                      SOME ;
                      PUSH string "thumbnailUri" ;
                      UPDATE ;
                      PUSH bytes 0x5b22545a49502d3132225d ;
                      SOME ;
                      PUSH string "interfaces" ;
                      UPDATE ;
                      DIG 4 ;
                      SOME ;
                      PUSH string "description" ;
                      UPDATE ;
                      DIG 5 ;
                      SOME ;
                      PUSH string "name" ;
                      UPDATE ;
                      DUP 5 ;
                      PAIR ;
                      DUP 5 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      UPDATE 2 ;
                      UPDATE 2 ;
                      DUP ;
                      CAR ;
                      DUP ;
                      CDR ;
                      EMPTY_BIG_MAP (pair address address) (set nat) ;
                      UPDATE 2 ;
                      UPDATE 2 ;
                      UPDATE 1 ;
                      DUP ;
                      CDR ;
                      DIG 3 ;
                      CDR ;
                      CAR ;
                      DIG 3 ;
                      PUSH bool True ;
                      SWAP ;
                      UPDATE ;
                      UPDATE 1 ;
                      UPDATE 2 ;
                      NIL operation ;
                      PAIR } } }
           { IF_LEFT
               { DIG 4 ;
                 DROP ;
                 DUP 2 ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 ITER { UNPAIR ;
                        DUG 2 ;
                        ITER { UNPAIR 3 ;
                               PUSH nat 1 ;
                               DIG 3 ;
                               COMPARE ;
                               NEQ ;
                               IF { DROP 3 ; PUSH string "WRONG_AMOUNT" ; FAILWITH }
                                  { DUP 2 ;
                                    DUP 6 ;
                                    PAIR ;
                                    DUP 8 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    SENDER ;
                                    DUP 5 ;
                                    DUP 2 ;
                                    COMPARE ;
                                    NEQ ;
                                    IF { DUP 6 ;
                                         CAR ;
                                         CDR ;
                                         CAR ;
                                         SWAP ;
                                         DUP 6 ;
                                         PAIR ;
                                         GET ;
                                         IF_NONE { EMPTY_SET nat } {} ;
                                         DUP 3 ;
                                         MEM ;
                                         NOT ;
                                         IF { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } {} }
                                       { DROP } ;
                                    PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                    DUP 5 ;
                                    DUP 4 ;
                                    DUP 6 ;
                                    PAIR 3 ;
                                    DUP 10 ;
                                    SWAP ;
                                    EXEC ;
                                    IF { DROP } { FAILWITH } ;
                                    DIG 2 ;
                                    SWAP ;
                                    SOME ;
                                    DIG 2 ;
                                    UPDATE } } ;
                        SWAP ;
                        DROP } ;
                 DIG 3 ;
                 DIG 4 ;
                 DROP 2 ;
                 DUP 2 ;
                 DIG 2 ;
                 CAR ;
                 DUP ;
                 CAR ;
                 DIG 3 ;
                 UPDATE 1 ;
                 UPDATE 1 ;
                 UPDATE 1 ;
                 NIL operation ;
                 PAIR ;
                 DUP 2 ;
                 DIG 2 ;
                 CAR ;
                 DUP ;
                 CAR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 UPDATE 1 ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 DUP ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 DUP ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 SWAP ;
                 CAR }
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 DUP 2 ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 SWAP ;
                 LAMBDA
                   (pair (lambda address unit)
                         (pair (big_map (pair address address) (set nat))
                               (or (pair address address nat) (pair address address nat))))
                   (big_map (pair address address) (set nat))
                   { UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     IF_LEFT
                       { DUP ;
                         GET 3 ;
                         DUP 2 ;
                         CAR ;
                         DUP 2 ;
                         DUP 2 ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ; DIG 2 ; DIG 4 ; DROP 4 }
                            { DUP ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              DROP ;
                              DUP 4 ;
                              DUP 3 ;
                              DUP 3 ;
                              PAIR ;
                              GET ;
                              IF_NONE { EMPTY_SET nat } {} ;
                              DIG 3 ;
                              GET 4 ;
                              PUSH bool True ;
                              SWAP ;
                              UPDATE ;
                              DIG 3 ;
                              SWAP ;
                              SOME ;
                              DIG 3 ;
                              DIG 3 ;
                              PAIR ;
                              UPDATE } }
                       { DUP ;
                         GET 3 ;
                         DUP 2 ;
                         CAR ;
                         DUP 2 ;
                         DUP 2 ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ; DIG 2 ; DIG 4 ; DROP 4 }
                            { DUP ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              DROP ;
                              DUP 4 ;
                              DIG 4 ;
                              DUP 4 ;
                              DUP 4 ;
                              PAIR ;
                              GET ;
                              IF_NONE
                                { DIG 3 ; DROP ; NONE (set nat) }
                                { DIG 4 ;
                                  GET 4 ;
                                  PUSH bool False ;
                                  SWAP ;
                                  UPDATE ;
                                  PUSH nat 0 ;
                                  DUP 2 ;
                                  SIZE ;
                                  COMPARE ;
                                  EQ ;
                                  IF { DROP ; NONE (set nat) } { SOME } } ;
                              DIG 3 ;
                              DIG 3 ;
                              PAIR ;
                              UPDATE } } } ;
                 DUP 6 ;
                 APPLY ;
                 DIG 5 ;
                 DROP ;
                 SWAP ;
                 DIG 2 ;
                 ITER { SWAP ; PAIR ; DUP 2 ; SWAP ; EXEC } ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DIG 3 ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 NIL operation ;
                 PAIR ;
                 DUP 2 ;
                 DIG 2 ;
                 CAR ;
                 DUP ;
                 CAR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 UPDATE 1 ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 DUP ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 DUP ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 SWAP ;
                 CAR } ;
             PAIR } } }

